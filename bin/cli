#!/usr/bin/env node

const { program } = require('commander');

const initialize = require('./commands/create-project')
program
    .command('initialize <projectName>')
    .description(`Initialize an apex application`)
    .action(initialize)
;

const setupVsc = require('./commands/setup-vsc')
program
    .command('setup-vsc')
    .description(`  
                    If you're using VS Code as the code editor, you can use this command to 
                    set up a bunch of utility snippets that can enhance your productivity.

                    example:
                        Instead of using 'apex compile <filePath>' to compile a SQL file, you can 
                        easily compile a file by pressing 'âŒ˜ + Shift + b' and choosing your task, in this case, 'compile'.

                    "We can support other editors in the future..."
                `)
    .action(setupVsc)
;

const compileFile = require('./commands/compile-file')
program
    .command('compile <filePath>')
    .description(` 
                    Compile your current file into the deatabase directly.
                    <filePath>: the Path should start from the project ROOT
                `)
    .action(compileFile)
;

const genPackage = require('./commands/gen-package')
program
    .command('gen-package <packageName>')
    .description(`Generate a package with a generic template`)
    .action(genPackage)
;

const genTable = require('./commands/gen-table')
program
    .command('gen-table <tableName>')
    .description(`Generate a table with a generic template`)
    .action(genTable)
;

const genView = require('./commands/gen-view')
program
    .command('gen-view <viewName>')
    .description(`Generate a view with a generic template`)
    .action(genView)
;


program.parse()