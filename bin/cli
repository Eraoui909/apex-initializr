#!/usr/bin/env node

// ###################################################
// ##                  Start                        ##
// ## this script make sure that you're in the root ##
// ###################################################
const fs = require('fs');
const { execSync } = require('child_process');

const globalPaths = 'config/conf-files/auto-generated/paths.sh';

if (!fs.existsSync(globalPaths)) {
    console.log('You must be in the root folder to run this script or command!');
    const rootFolder = execSync('git rev-parse --show-toplevel', { encoding: 'utf8' }).trim();
    console.log(`Please make sure that you are in ${rootFolder}`)
    process.exit(1);
}
// ###################################################
// ##                    End                        ##
// ## this script make sure that you're in the root ##
// ###################################################

const { program } = require('commander');
const {runCommand} = require('./commands/helper');

const initialize = require('./commands/create-project')
program
    .command('initialize <projectName>')
    .description(`Initialize an apex application`)
    .action(initialize)
;

const compileFile = require('./commands/compile-file')
program
    .command('compile <filePath>')
    .description(`
                    Compile your current file into the deatabase directly.
                    <filePath>: the Path should start from the project ROOT
                `)
    .action(compileFile)
;

const genPackage = require('./commands/gen-package')
program
    .command('gen-package <packageName>')
    .description(`Generate a package with a generic template`)
    .action(genPackage)
;

const genTable = require('./commands/gen-table')
program
    .command('gen-table <tableName>')
    .description(`Generate a table with a generic template`)
    .action(genTable)
;

const genView = require('./commands/gen-view')
program
    .command('gen-view <viewName>')
    .description(`Generate a view with a generic template`)
    .action(genView)
;


program.parse()